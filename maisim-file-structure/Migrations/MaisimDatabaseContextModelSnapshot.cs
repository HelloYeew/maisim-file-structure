// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using maisim_file_structure.Database;

#nullable disable

namespace maisim_file_structure.Migrations
{
    [DbContext(typeof(MaisimDatabaseContext))]
    partial class MaisimDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("maisim_file_structure.Objects.Beatmap", b =>
                {
                    b.Property<int>("BeatmapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeatmapSetID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<float>("DifficultyRating")
                        .HasColumnType("REAL");

                    b.Property<string>("NoteDesigner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TrackMetadataConnectBeatmapSetID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BeatmapID");

                    b.HasIndex("BeatmapSetID");

                    b.HasIndex("TrackMetadataConnectBeatmapSetID");

                    b.ToTable("Beatmaps");
                });

            modelBuilder.Entity("maisim_file_structure.Objects.BeatmapSet", b =>
                {
                    b.Property<int>("BeatmapSetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AudioFilename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PreviewTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrackMetadataConnectBeatmapSetID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BeatmapSetID");

                    b.HasIndex("TrackMetadataConnectBeatmapSetID");

                    b.ToTable("BeatmapSets");
                });

            modelBuilder.Entity("maisim_file_structure.Objects.TrackMetadata", b =>
                {
                    b.Property<int>("ConnectBeatmapSetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ArtistUnicode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Bpm")
                        .HasColumnType("REAL");

                    b.Property<string>("CoverPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleUnicode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ConnectBeatmapSetID");

                    b.ToTable("TrackMetadata");
                });

            modelBuilder.Entity("maisim_file_structure.Objects.Beatmap", b =>
                {
                    b.HasOne("maisim_file_structure.Objects.BeatmapSet", "BeatmapSet")
                        .WithMany("Beatmaps")
                        .HasForeignKey("BeatmapSetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("maisim_file_structure.Objects.TrackMetadata", "TrackMetadata")
                        .WithMany()
                        .HasForeignKey("TrackMetadataConnectBeatmapSetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeatmapSet");

                    b.Navigation("TrackMetadata");
                });

            modelBuilder.Entity("maisim_file_structure.Objects.BeatmapSet", b =>
                {
                    b.HasOne("maisim_file_structure.Objects.TrackMetadata", "TrackMetadata")
                        .WithMany()
                        .HasForeignKey("TrackMetadataConnectBeatmapSetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrackMetadata");
                });

            modelBuilder.Entity("maisim_file_structure.Objects.BeatmapSet", b =>
                {
                    b.Navigation("Beatmaps");
                });
#pragma warning restore 612, 618
        }
    }
}
